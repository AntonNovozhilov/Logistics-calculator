"""4base

Revision ID: f6a70dd0843c
Revises: 8cddef5637ef
Create Date: 2025-08-10 18:40:31.681760

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f6a70dd0843c"
down_revision: Union[str, Sequence[str], None] = "8cddef5637ef"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f("distances_city_to_fkey"), "distances", type_="foreignkey"
    )
    op.drop_constraint(
        op.f("distances_city_from_fkey"), "distances", type_="foreignkey"
    )
    op.alter_column(
        "distances",
        "city_from",
        existing_type=sa.INTEGER(),
        type_=sa.String(),
        nullable=False,
    )
    op.alter_column(
        "distances",
        "city_to",
        existing_type=sa.INTEGER(),
        type_=sa.String(),
        nullable=False,
    )
    op.create_foreign_key(
        None, "distances", "citys", ["city_from"], ["city_name"]
    )
    op.create_foreign_key(
        None, "distances", "citys", ["city_to"], ["city_name"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "distances", type_="foreignkey")
    op.drop_constraint(None, "distances", type_="foreignkey")
    op.create_foreign_key(
        op.f("distances_city_from_fkey"),
        "distances",
        "citys",
        ["city_from"],
        ["id"],
    )
    op.create_foreign_key(
        op.f("distances_city_to_fkey"),
        "distances",
        "citys",
        ["city_to"],
        ["id"],
    )
    op.alter_column(
        "distances",
        "city_to",
        existing_type=sa.String(),
        type_=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        "distances",
        "city_from",
        existing_type=sa.String(),
        type_=sa.INTEGER(),
        nullable=True,
    )
    # ### end Alembic commands ###
